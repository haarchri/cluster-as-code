apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xcontrolplanes.mcp.caas.upbound.io
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: mcp.caas.upbound.io/v1alpha1
    kind: XControlPlane
  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: controlplane
            base:
              apiVersion: mcp.upbound.io/v1alpha1
              kind: ControlPlane
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.labels[crossplane.io/claim-name]
                toFieldPath: metadata.annotations[crossplane.io/external-name]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.organizationName
                toFieldPath: spec.forProvider.organizationName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.configuration
                toFieldPath: spec.forProvider.configuration

          - name: mcp-robot
            base:
              apiVersion: iam.upbound.io/v1alpha1
              kind: Robot
            patches:
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    - fromFieldPath: spec.parameters.robotPermission
                  strategy: string
                  string:
                    fmt: "%s-%s"
                toFieldPath: metadata.name
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    - fromFieldPath: spec.parameters.robotPermission
                  strategy: string
                  string:
                    fmt: "%s-%s"
                toFieldPath: spec.forProvider.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.organizationName
                toFieldPath: spec.forProvider.owner.name
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.labels[crossplane.io/claim-name]
                toFieldPath: spec.forProvider.description
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: "%s"

          - name: mcp-robot-token
            base:
              apiVersion: iam.upbound.io/v1alpha1
              kind: Token
              spec:
                forProvider:
                  name: mcprobot-composition-token
                  owner:
                    type: robots
                    idSelector:
                      matchControllerRef: true
                writeConnectionSecretToRef:
                  namespace: upbound-system
            patches:
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    - fromFieldPath: spec.parameters.robotPermission
                  strategy: string
                  string:
                    fmt: "%s-%s-robot-token"
                toFieldPath: spec.writeConnectionSecretToRef.name
              - type: ToCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.name
                toFieldPath: status.mcp.tokenSecret
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    - fromFieldPath: spec.parameters.robotPermission
                  strategy: string
                  string:
                    fmt: "%s-%s"
                toFieldPath: metadata.name
              - type: ToCompositeFieldPath
                fromFieldPath: metadata.annotations[crossplane.io/external-name]
                toFieldPath: status.mcp.tokenAccessID
                policy:
                  fromFieldPath: Optional

          - name: mcp-team
            base:
              apiVersion: iam.upbound.io/v1alpha1
              kind: Team
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.organizationName
                toFieldPath: spec.forProvider.organizationName
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    - fromFieldPath: spec.parameters.robotPermission
                  strategy: string
                  string:
                    fmt: '%s-%s-access'
                toFieldPath: spec.forProvider.name
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    - fromFieldPath: spec.parameters.robotPermission
                  strategy: string
                  string:
                    fmt: "%s-%s-access"
                toFieldPath: metadata.name

          - name: mcp-team-membership
            base:
              apiVersion: iam.upbound.io/v1alpha1
              kind: RobotTeamMembership
              spec:
                forProvider:
                  robotIdSelector:
                    matchControllerRef: true
                  teamIdSelector:
                    matchControllerRef: true
            patches:
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    - fromFieldPath: spec.parameters.robotPermission
                  strategy: string
                  string:
                    fmt: "%s-%s-access"
                toFieldPath: metadata.name

          - name: mcp-team-permission
            base:
              apiVersion: mcp.upbound.io/v1alpha1
              kind: ControlPlanePermission
              spec:
                forProvider:
                  teamIdSelector:
                    matchControllerRef: true
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.labels[crossplane.io/claim-name]
                toFieldPath: spec.forProvider.controlPlaneName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.robotPermission
                toFieldPath: spec.forProvider.permission
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.organizationName
                toFieldPath: spec.forProvider.organizationName
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    - fromFieldPath: spec.parameters.robotPermission
                  strategy: string
                  string:
                    fmt: "%s-%s-access"
                toFieldPath: metadata.name

          - name: controlplane-auth
            base:
              apiVersion: mcp.upbound.io/v1alpha1
              kind: ControlPlaneAuth
              spec:
                forProvider:
                  tokenSecretRef:
                    key: token
                    namespace: upbound-system
                writeConnectionSecretToRef:
                  namespace: upbound-system
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.labels[crossplane.io/claim-name]
                toFieldPath: spec.writeConnectionSecretToRef.name
                transforms:
                  - string:
                      type: Format
                      fmt: "%s-connection-details"
                    type: string
              - type: ToCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.name
                toFieldPath: status.mcp.connectionSecretName
              - type: FromCompositeFieldPath
                fromFieldPath: status.mcp.tokenSecret
                toFieldPath: spec.forProvider.tokenSecretRef.name
                policy:
                  fromFieldPath: Required
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.labels[crossplane.io/claim-name]
                toFieldPath: spec.forProvider.controlPlaneName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.organizationName
                toFieldPath: spec.forProvider.organizationName
            connectionDetails:
              - name: kubeconfig
                type: FromConnectionSecretKey
                fromConnectionSecretKey: kubeconfig
